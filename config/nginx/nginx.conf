user nginx nginx;
worker_processes 1;

error_log /var/log/nginx/error_log info;

events {
	worker_connections 1024;
	use epoll;
}

http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	log_format main
		'$remote_addr - $remote_user [$time_local] '
		'"$request" $status $bytes_sent '
		'"$http_referer" "$http_user_agent" '
		'"$gzip_ratio"';

	client_header_timeout 10m;
	client_body_timeout 10m;
	send_timeout 10m;

	connection_pool_size 256;
	client_header_buffer_size 1k;
	large_client_header_buffers 4 2k;
	request_pool_size 4k;

	gzip on;
	gzip_min_length 1100;
	gzip_buffers 4 8k;
	gzip_types text/plain;

	output_buffers 1 32k;
	postpone_output 1460;

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;

	keepalive_timeout 75 20;

	ignore_invalid_headers on;

	index index.html;
	
	# Gunicorn server
	upstream django {
	    server 127.0.0.1:9000;
	}

	# Redirect all HTTP (80) requests to HTTPS (443)
	server {
		listen       80;
		server_name  ion.tjhsst.edu;
		access_log   /var/log/ion/ion.tjhsst.edu.access.log;
                error_log    /var/log/ion/ion.tjhsst.edu.error.log;
		
		rewrite      ^ https://$server_name$request_uri? permanent;
	}
        # Serve static files and redirect any other request to Gunicorn
	server {
		# listen       80;
		listen       443 default_server ssl;

		# SSL certificates and keys
		# Don't include these files in Git for security reasons
		ssl_certificate /etc/nginx/ssl/tjhsst.12-13.crt;
		ssl_certificate_key /etc/nginx/ssl/tjhsst.12-13.key;

		server_name  ion.tjhsst.edu;
		root         /usr/local/www/intranet3;
		access_log   /var/log/ion/ion.tjhsst.edu.access.log;
		error_log    /var/log/ion/ion.tjhsst.edu.error.log;

		# Check if a file exists in document root for the incoming request.
		# If it doesn't proxy to Gunicorn/Django.
		try_files $uri @django;
	
		location /static {
			alias /usr/local/www/intranet3/intranet/collected_static;
		}

		# Setup named location for Django requests and handle proxy details
		location @django {
			proxy_pass           http://django;
	  		proxy_redirect       off;
	  		proxy_set_header     Host             $host;
	  		proxy_set_header     X-Real-IP        $remote_addr;
	  		proxy_set_header     X-Forwarded-For  $proxy_add_x_forwarded_for;
		}

		# Gitweb static
		
		location /git/static {
			alias /usr/local/www/gitweb/static;
		}	

		# Gitweb interface

		location /git/ {
			# index gitweb/gitweb.cgi;
			# include fastcgi_params;
			# gzip off;
			# fastcgi_param	GITWEB_CONFIG	/usr/local/www/gitweb/gitweb.conf;
			# if ($uri ~ "/gitweb/gitweb.cgi") {
			# 	fastcgi_pass    unix:/var/run/fcgiwrap.sock;
			# }
			include fastcgi_params;
    			fastcgi_param SCRIPT_FILENAME /usr/local/www/gitweb/gitweb.cgi;
			fastcgi_param GIT_HTTP_EXPORT_ALL "";
    			fastcgi_param GIT_PROJECT_ROOT /var/git;
    			fastcgi_param PATH_INFO $document_uri;
    			fastcgi_pass  unix:/var/run/fcgiwrap.sock-1;
		}
		
		# Don't use this, it doesn't work
		# error_page 403 /error/403.html;
		# error_page 404 /error/404.html;
		# error_page 500 501 502 503 504 /error/500.html;
		# 
		# location ^~ /error/ {
		#    internal;
		#    root /usr/local/www/intranet3;
		# }
	}
	
	# Separate SSL server config
	# This information has been combined into the config above,
	# so this block isn't needed.
	#server {
	#	listen 443;
	#	server_name ion.tjhsst.edu;
	#	root /usr/local/www/intranet3;
	#	access_log   /var/log/ion/ion.tjhsst.edu.access.log;
	#	error_log    /var/log/ion/ion.tjhsst.edu.error.log;
	#
	#	ssl on;
	#	ssl_certificate /usr/local/www/intranet3/extras/ssl/tjhsst.12-13.crt;
	#	ssl_certificate_key /usr/local/www/intranet3/extras/ssl/tjhsst.12-13.key;
	#
	#}

	# SSL example
	#server {
	#	listen 127.0.0.1:443;
	#	server_name localhost;

	#	ssl on;
	#	ssl_certificate /etc/ssl/nginx/nginx.pem;
	#	ssl_certificate_key /etc/ssl/nginx/nginx.key;

	#	access_log /var/log/nginx/localhost.ssl_access_log main;
	#	error_log /var/log/nginx/localhost.ssl_error_log info;

	#	root /var/www/localhost/htdocs;
	#}
}
